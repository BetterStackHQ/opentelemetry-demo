# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0


static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: ${ENVOY_PORT}
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                  - name: frontend
                    domains:
                    - "*"
                    routes:
                    - match: { path: "/loadgen" }
                      redirect: { path_redirect: "/loadgen/" }
                    - match: { prefix: "/loadgen/" }
                      route: { cluster: loadgen, prefix_rewrite: "/" }
                    - match: { prefix: "/images/" }
                      route: { cluster: image-provider, prefix_rewrite: "/" }
                    - match: { prefix: "/flagservice/" }
                      route: { cluster: flagservice, prefix_rewrite: "/", timeout: 0s }
                    - match: { prefix: "/feature" }
                      route: { cluster: flagd-ui }
                    - match: { prefix: "/" } # Default/catch-all route - keep last since prefix:"/" matches everything
                      route: { cluster: frontend }
                http_filters:
                - name: envoy.filters.http.fault
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.fault.v3.HTTPFault
                    max_active_faults: 100
                    delay:
                      header_delay: {}
                      percentage:
                        numerator: 100
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: frontend
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: frontend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: frontend
                      port_value: 8080
    - name: image-provider
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: image-provider
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: image-provider
                      port_value: 8081
    - name: flagservice
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: flagservice
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: flagd
                      port_value: 8013
    - name: flagd-ui
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: flagd-ui
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: flagd-ui
                      port_value: 4000
    - name: loadgen
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: loadgen
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: load-generator
                      port_value: 8089
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10000
layered_runtime:
  layers:
    - name: static_layer_0
      static_layer:
        envoy:
          resource_limits:
            listener:
              example_listener_name:
                connection_limit: 10000
